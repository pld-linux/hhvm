--- hiphop-php/src/cpp/ext/ext_class.cpp~	2010-05-16 15:37:59.000000000 +0300
+++ hiphop-php/src/cpp/ext/ext_class.cpp	2010-05-16 15:38:01.043525285 +0300
@@ -41,13 +41,13 @@
 }
 
 bool f_class_exists(CStrRef class_name, bool autoload /* = false */) {
-  const ClassInfo::ClassInfo *info =
+  const ClassInfo *info =
     ClassInfo::FindClass(class_name.data());
   return info && info->isDeclared();
 }
 
 bool f_interface_exists(CStrRef interface_name, bool autoload /* = false */) {
-  const ClassInfo::ClassInfo *info =
+  const ClassInfo *info =
     ClassInfo::FindInterface(interface_name.data());
   return info && info->isDeclared();
 }
--- hiphop-php/src/cpp/ext/ext_misc.cpp~	2010-05-16 15:39:59.000000000 +0300
+++ hiphop-php/src/cpp/ext/ext_misc.cpp	2010-05-16 15:40:03.153302857 +0300
@@ -76,7 +76,7 @@
       }
     }
     if (f_class_exists(className)) { // taking care of volatile class
-      const ClassInfo::ClassInfo *info;
+      const ClassInfo *info;
       for (const char *parentClass = className.data(); parentClass;
            parentClass = info->getParentClass()) {
         info = ClassInfo::FindClass(parentClass);
@@ -134,7 +134,7 @@
       }
     }
     if (f_class_exists(className)) { // taking care of volatile class
-      const ClassInfo::ClassInfo *info;
+      const ClassInfo *info;
       for (const char *parentClass = className.data();
            parentClass && *parentClass;
            parentClass = info->getParentClass()) {
